# Функция для проверки существования треугольника
def is_triangle(a, b, c):
    # Каждая пара сторон в сумме должна быть больше 3й стороны
    if a + b > c and a + c > b and b + c > a:
        # В случае, если соответсвует условию, возвращаем True
        return True
    # Иначе False
    return False


# Функция для вычисления площади треугольника по формуле Герона
def get_triangle_area(a, b, c):
    # Вычисляем полусумму всех сторон
    p = (a + b + c) / 2
    # Записываем значения в формулу и возвращаем числовое значение
    return (p * (p - a) * (p - b) * (p - c)) ** 0.5


# Функция для перебора всех возможных вариантов сочетаний элементов массива
def get_combinations(arr):
    # Находим длинну массива
    n = len(arr)
    # Инициализируем пустой массив комбинаций
    combinations_list = []
    # Тройным циклом проходим по каждым элементам массива
    for i in range(n - 2):
        for j in range(i + 1, n - 1):
            for k in range(j + 1, n):
                # Записываем комбинации и их номера в массив, получаем формат [(3, 5, 4, 2, 3, 5), (...), ..., (...)]
                combination = (arr[i], arr[j], arr[k], i + 1, j + 1, k + 1)
                combinations_list.append(combination)
    # Возвращаем массив комбинаций
    return combinations_list


# Функция, в которой производятся все вычисления
def main():
    # Инициализируем и вводим значение N, что означает количество палочек
    n = int(input())
    # Вводим список палочек
    sticks = list(map(int, input().split()))
    # Проверяем, что список палочек соответствует ограничению N
    if len(sticks) != n:
        # В случае, если не соответсвует, то срезаем лишнее и продолжаем вычисления
        print("Количество палочек не соответствует введённому! Лишние элементы срезаны!")
        sticks = sticks[:n]
    # Проверяем, что список палочек не меньше 3, так как иначе треугольник априори невозможен
    if len(sticks) < 3:
        # Если меньше, то выходим из программы
        print("Количество палочек меньше возможного!")
        return
    # Инициализируем максимальное значение площади фигуры и пустой массив выбранных палочек
    max_area, selected_sticks = 0, []
    # Проходим по всем возможным комбинациям
    for i in get_combinations(sticks):
        # Проверяем существование треугольников по этим комбинациям
        if is_triangle(i[0], i[1], i[2]):
            # Находим комбинацию с максимальной площадью и записываем в раннее созданные переменные
            if get_triangle_area(i[0], i[1], i[2]) > max_area:
                max_area = get_triangle_area(i[0], i[1], i[2])
                selected_sticks = [i[3], i[4], i[5]]
    # Выводим по заданному формату
    print(*selected_sticks)
    print(max_area)


# Проверяем на корректность и вызываем необходимую функцию
if __name__ == "__main__":
    main()
